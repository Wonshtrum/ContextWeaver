(module
  (import "env" "print" (func $print (param i64 i32)))
  (import "env" "__ctx_set" (func $__ctx_set (param i64)))
  (import "env" "__ctx_get" (func $__ctx_get (result i64)))

  (memory (export "memory") 1)

  (data (i32.const 0) "main\00")
  (data (i32.const 16) "internal1\00")
  (data (i32.const 32) "internal2\00")

  (func $print_with_ctx (param i32)
    (call $print (call $__ctx_get) (local.get 0))
  )
  (func $internal2 (param $n i32)
    (local $i i32)
    (local.set $i (i32.const 0))
    (call $print_with_ctx (i32.const 32)) 
    (block $exit
      (call $__ctx_set (i64.const 10020))
      (loop $loop
        (br_if $exit (i32.ge_u (local.get $i) (local.get $n)))
        (call $print_with_ctx (i32.const 32)) 
        (call $__ctx_set (i64.const 10021))
        (local.set $i (i32.add (local.get $i) (i32.const 1)))
        (br $loop)
      )
    )
    (call $print_with_ctx (i32.const 32)) 
  )
  (func $internal1 (param $n i32)
    (local $i i32)
    (local.set $i (i32.const 0))
    (call $print_with_ctx (i32.const 16)) 
    (block $exit
      (call $__ctx_set (i64.const 10010))
      (loop $loop
        (br_if $exit (i32.ge_u (local.get $i) (local.get $n)))
        (call $print_with_ctx (i32.const 16)) 
        (call $__ctx_set (i64.const 10011))
        (call $internal2 (local.get $i))
        (local.set $i (i32.add (local.get $i) (i32.const 1)))
        (br $loop)
      )
    )
    (call $print_with_ctx (i32.const 16)) 
  )
  (func $main (export "main") (param $n i32)
    (call $print_with_ctx (i32.const 0)) 
    (call $__ctx_set (i64.const 10000))
    (call $internal1 (local.get $n))
  )
)

